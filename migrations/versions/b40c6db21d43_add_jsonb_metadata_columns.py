"""add_jsonb_metadata_columns

Revision ID: b40c6db21d43
Revises: a48b27d66f24
Create Date: 2025-02-11 07:49:08.490238

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b40c6db21d43'
down_revision = 'a48b27d66f24'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add JSONB columns
    with op.batch_alter_table('global_redirect', schema=None) as batch_op:
        batch_op.add_column(sa.Column('redirect_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    with op.batch_alter_table('link_click', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tracking_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    # Add GIN indexes for JSONB columns
    op.execute('CREATE INDEX ix_global_redirect_metadata_gin ON global_redirect USING gin (redirect_metadata);')
    op.execute('CREATE INDEX ix_link_click_metadata_gin ON link_click USING gin (tracking_metadata);')

    # Add btree index on timestamp for better range query performance
    op.create_index(op.f('ix_link_click_timestamp'), 'link_click', ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes first
    op.drop_index(op.f('ix_link_click_timestamp'), table_name='link_click')
    op.execute('DROP INDEX IF EXISTS ix_link_click_metadata_gin;')
    op.execute('DROP INDEX IF EXISTS ix_global_redirect_metadata_gin;')

    # Drop columns
    with op.batch_alter_table('link_click', schema=None) as batch_op:
        batch_op.drop_column('tracking_metadata')

    with op.batch_alter_table('global_redirect', schema=None) as batch_op:
        batch_op.drop_column('redirect_metadata')

    # ### end Alembic commands ###
