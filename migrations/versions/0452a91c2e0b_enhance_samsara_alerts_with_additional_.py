"""Enhance Samsara alerts with additional fields

Revision ID: 0452a91c2e0b
Revises: 20240415_add_samsara_clients
Create Date: 2025-04-17 22:43:51.787269

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0452a91c2e0b'
down_revision = '20240415_add_samsara_clients'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First add all new columns as nullable
    with op.batch_alter_table('samsara_alert_assignments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('priority', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('due_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('resolution', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('resolution_time', sa.DateTime(), nullable=True))

    with op.batch_alter_table('samsara_alerts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('priority', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('resolution', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('resolved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('resolved_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))

    # Clean up data: Set default values and remove invalid records
    
    # 1. Handle vehicles with NULL names
    op.execute("UPDATE samsara_vehicles SET name = 'Unknown Vehicle ' || id::text WHERE name IS NULL")
    
    # 2. Delete alerts without vehicle_id (these are invalid)
    op.execute("DELETE FROM samsara_alerts WHERE vehicle_id IS NULL")
    
    # 3. Set default priority values
    op.execute("UPDATE samsara_alert_assignments SET priority = 'medium' WHERE priority IS NULL")
    op.execute("UPDATE samsara_alerts SET priority = 'medium' WHERE priority IS NULL")
    
    # Now make columns non-nullable and add other constraints
    with op.batch_alter_table('samsara_alert_assignments', schema=None) as batch_op:
        batch_op.alter_column('priority', nullable=False)

    with op.batch_alter_table('samsara_alerts', schema=None) as batch_op:
        batch_op.alter_column('priority', nullable=False)
        batch_op.alter_column('vehicle_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('alert_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('severity',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'user', ['resolved_by'], ['id'])

    with op.batch_alter_table('samsara_vehicles', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('external_ids',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
        batch_op.alter_column('data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('samsara_vehicles', schema=None) as batch_op:
        batch_op.alter_column('data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
        batch_op.alter_column('external_ids',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'{}'::jsonb"))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('samsara_alerts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('severity',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('alert_type',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('vehicle_id',
               existing_type=sa.BIGINT(),
               nullable=True)
        batch_op.drop_column('tags')
        batch_op.drop_column('resolved_by')
        batch_op.drop_column('resolved_at')
        batch_op.drop_column('resolution')
        batch_op.drop_column('priority')

    with op.batch_alter_table('samsara_alert_assignments', schema=None) as batch_op:
        batch_op.drop_column('resolution_time')
        batch_op.drop_column('resolution')
        batch_op.drop_column('due_date')
        batch_op.drop_column('priority')

    # ### end Alembic commands ###
