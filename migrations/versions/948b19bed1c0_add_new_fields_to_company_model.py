"""Add new fields to Company model

Revision ID: 948b19bed1c0
Revises: add_profile_picture_field
Create Date: 2025-02-25 08:29:03.945436

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '948b19bed1c0'
down_revision = 'add_profile_picture_field'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('service_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('preferred_contact_time', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('additional_info', sa.Text(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'new'::character varying"))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('ix_company_status')
        batch_op.drop_index('ix_company_user_id')

    with op.batch_alter_table('global_redirect', schema=None) as batch_op:
        batch_op.drop_index('ix_global_redirect_metadata_gin', postgresql_using='gin')

    with op.batch_alter_table('link_click', schema=None) as batch_op:
        batch_op.drop_index('ix_link_click_metadata_gin', postgresql_using='gin')
        batch_op.drop_index('ix_link_click_timestamp')

    with op.batch_alter_table('point_config', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('ix_point_config_key')

    with op.batch_alter_table('reward', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('ix_reward_points_required')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('points',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('user_reward', schema=None) as batch_op:
        batch_op.alter_column('earned_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('ix_user_reward_reward_id')
        batch_op.drop_index('ix_user_reward_user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_reward', schema=None) as batch_op:
        batch_op.create_index('ix_user_reward_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_user_reward_reward_id', ['reward_id'], unique=False)
        batch_op.alter_column('earned_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('points',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('reward', schema=None) as batch_op:
        batch_op.create_index('ix_reward_points_required', ['points_required'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))

    with op.batch_alter_table('point_config', schema=None) as batch_op:
        batch_op.create_index('ix_point_config_key', ['key'], unique=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('link_click', schema=None) as batch_op:
        batch_op.create_index('ix_link_click_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_link_click_metadata_gin', ['tracking_metadata'], unique=False, postgresql_using='gin')

    with op.batch_alter_table('global_redirect', schema=None) as batch_op:
        batch_op.create_index('ix_global_redirect_metadata_gin', ['redirect_metadata'], unique=False, postgresql_using='gin')

    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.create_index('ix_company_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_company_status', ['status'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'new'::character varying"))
        batch_op.drop_column('additional_info')
        batch_op.drop_column('preferred_contact_time')
        batch_op.drop_column('service_type')
        batch_op.drop_column('phone')
        batch_op.drop_column('email')
        batch_op.drop_column('contact_name')

    # ### end Alembic commands ###
